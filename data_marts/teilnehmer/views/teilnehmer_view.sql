DROP VIEW IF EXISTS TC.TEILNEHMER_VIEW;


CREATE VIEW TC.TEILNEHMER_VIEW AS 
WITH TN_ABBRUCH_KORRIGIERT AS --Tempor√§re Tabelle erstellen und Abbruchdatum korrigieren

	(SELECT TEILNEHMER_ID_TUTOREN,
			STATUS,
			KURS_ID_BACKOFFICE,
			ABBRUCH_DATUM,
			CASE
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS = 'Abbruch vor LG-Start'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NULL THEN TEILNEHMER_KURS_ZUORDNUNG.STARTDATUM - 1
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS = 'Abbruch vor LG-Start'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NOT NULL THEN TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS = 'Abbruch nach LG-Start'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NULL THEN TEILNEHMER_KURS_ZUORDNUNG.STARTDATUM + 1
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS = 'Abbruch nach LG-Start'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NOT NULL THEN TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS = 'Abbruch nach aktuellem Lehrgang'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NULL THEN TEILNEHMER_KURS_ZUORDNUNG.ENDDATUM + 1
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS = 'Abbruch nach aktuellem Lehrgang'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NOT NULL THEN TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM
							WHEN TEILNEHMER_KURS_ZUORDNUNG.STATUS !~~ '%Abbruch%'::text
												AND TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM IS NOT NULL THEN TEILNEHMER_KURS_ZUORDNUNG.ABBRUCH_DATUM
							ELSE NULL::date
			END AS CALCABBRUCH
		FROM TC.TEILNEHMER_KURS_ZUORDNUNG), 
TN_MIN_ABBRUCH AS
	(SELECT TEILNEHMER_ID_TUTOREN AS TID,
			MIN(CALCABBRUCH) AS CALCABBRUCH
		FROM TN_ABBRUCH_KORRIGIERT
		GROUP BY TEILNEHMER_ID_TUTOREN),
	TN_MAX_ABBRUCH AS (
SELECT TEILNEHMER_ID_TUTOREN,
	STATUS,
	ENDDATUM,
	CASE 
          WHEN CALCABBRUCH < enddatum AND status = 'Beendet' THEN enddatum + 1
        ELSE CALCABBRUCH END as Calcabbruch
FROM TC.TEILNEHMER_KURS_ZUORDNUNG
LEFT JOIN TN_MIN_ABBRUCH ON TEILNEHMER_KURS_ZUORDNUNG.TEILNEHMER_ID_TUTOREN = TN_MIN_ABBRUCH.TID),
max_abbruch as (
    SELECT teilnehmer_id_tutoren as tid, Max(calcabbruch) as CALCABBRUCH FROM tn_max_abbruch
    GROUP BY tid)
SELECT LEHRGANGS_DETAILS_ID,
	TEILNEHMER_ID_TUTOREN,
	KURS_TITEL,
	KURS_ID_BACKOFFICE,
	KURS_ID_QM_2,
	STARTDATUM,
	ENDDATUM,
	STATUS,
	CALCABBRUCH AS ABBRUCH_DATUM,
	TUTOR_ID,
	TUTOR_NAME,
	LAST_EVENT_ON
FROM TC.TEILNEHMER_KURS_ZUORDNUNG
LEFT JOIN Max_ABBRUCH ON TEILNEHMER_KURS_ZUORDNUNG.TEILNEHMER_ID_TUTOREN = Max_ABBRUCH.TID
ORDER BY TEILNEHMER_ID_TUTOREN